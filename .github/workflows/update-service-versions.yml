name: Update Service Versions

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  update_service_versions:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install dependencies
        run: npm install

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Authenticate with GitHub CLI
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Check Nginx version
        id: nginx
        run: |
          latest_nginx=$(curl -s https://nginx.org/en/download.html | grep -oP '(?<=nginx-)[0-9]+\.[0-9]+\.[0-9]+' | sort -V | tail -n 1)
          echo "latest_nginx=$latest_nginx" >> $GITHUB_ENV

      - name: Check MariaDB version
        id: mariadb
        run: |
          latest_mariadb=$(curl -s https://downloads.mariadb.org/rest-api/mariadb/all-releases/?olderReleases=false | jq -r '.releases[] | select(.status == "stable") | .release_number' | sort -V | tail -n 1)
          echo "latest_mariadb=$latest_mariadb" >> $GITHUB_ENV

      - name: Check PHP version
        id: php
        run: |
          latest_php=$(curl -s https://windows.php.net/download/ | grep -oP 'PHP [0-9]+\.[0-9]+ \(\K[0-9]+\.[0-9]+\.[0-9]+' | head -n 1)
          echo "latest_php=$latest_php" >> $GITHUB_ENV

      - name: Check phpMyAdmin version
        id: phpmyadmin
        run: |
          latest_phpmyadmin=$(curl -s https://www.phpmyadmin.net/downloads/ | grep -oP '(?<=phpMyAdmin-)[0-9]+\.[0-9]+\.[0-9]+' | head -n 1)
          echo "latest_phpmyadmin=$latest_phpmyadmin" >> $GITHUB_ENV

      - name: Check for version updates
        id: check_versions
        run: |
          set -e

          check_existing_pr() {
            title=$1
            pr_exists=$(gh pr list --state open --search "$title" | grep -q "$title" && echo true || echo false)
            echo $pr_exists
          }

          update_and_pr() {
            service=$1
            current_version=$2
            latest_version=$3
            if [ "$current_version" != "$latest_version" ]; then
              pr_title="Bump $service from $current_version to $latest_version"
              if [ "$(check_existing_pr "$pr_title")" = "false" ]; then
                git checkout -b "update-${service,,}-version"
                sed -i "s/\"name\": \"$service\", \"version\": \"$current_version\"/\"name\": \"$service\", \"version\": \"$latest_version\"/g" src/config.js
                git config --global user.name "GitHub Actions"
                git config --global user.email "actions@github.com"
                git commit -am "$pr_title"
                git push --set-upstream origin "update-${service,,}-version"
                gh pr create --title "$pr_title" --body "Bump $service version from $current_version to $latest_version" --base main --head "update-${service,,}-version"
              fi
            fi
          }

          update_and_pr "Nginx" "$(sed -n 's/.*"name": "Nginx",.*"version": "\([0-9]\+\.[0-9]\+\.[0-9]\+\)".*/\1/p' src/config.js)" "${{ env.latest_nginx }}"
          update_and_pr "MariaDB" "$(sed -n 's/.*"name": "MariaDB",.*"version": "\([0-9]\+\.[0-9]\+\.[0-9]\+\)".*/\1/p' src/config.js)" "${{ env.latest_mariadb }}"
          update_and_pr "PHP" "$(sed -n 's/.*"name": "PHP",.*"version": "\([0-9]\+\.[0-9]\+\.[0-9]\+\)".*/\1/p' src/config.js)" "${{ env.latest_php }}"
          update_and_pr "phpMyAdmin" "$(sed -n 's/.*"name": "phpMyAdmin",.*"version": "\([0-9]\+\.[0-9]\+\.[0-9]\+\)".*/\1/p' src/config.js)" "${{ env.latest_phpmyadmin }}"
